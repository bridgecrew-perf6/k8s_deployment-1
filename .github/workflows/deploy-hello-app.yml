# # This workflow uses actions that are not certified by GitHub.
# # They are provided by a third-party and are governed by
# # separate terms of service, privacy policy, and support
# # documentation.

name: Build and Deploy to GKE

on:
  push:
    branches:
      - main
      - flux-test

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: my-cluster    # Add your cluster name here.
  GKE_ZONE: europe-west3-a   # Add your cluster zone here.
  DEPLOYMENT_NAME: hello-app # Add your deployment name here.
  IMAGE: static-site

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    # Build the Docker image
    - name: Build
      run: |-
        pwd
        ls
        docker build \
          --tag "eu.gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "eu.gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

#     - name: Get cluster credentials
#       run: gcloud container clusters get-credentials my-cluster --region europe-west3-a

#     - name: Set deployment image
#       run: kubectl set image deployment/hello-app *=eu.gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA

#     - name: echo image name
#       run: echo eu.gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA

#     - name: Get Pods
#       run: kubectl get pods